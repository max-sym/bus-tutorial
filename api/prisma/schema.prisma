// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tripsFrom Trip[]   @relation("cityFrom")
  tripsTo   Trip[]   @relation("cityTo")
}

model Trip {
  id            Int            @id @default(autoincrement())
  departure     DateTime
  arrival       DateTime
  busId         Int
  bus           Bus            @relation(fields: [busId], references: [id])
  cityFromId    Int
  cityFrom      City           @relation("cityFrom", fields: [cityFromId], references: [id])
  cityToId      Int
  cityTo        City           @relation("cityTo", fields: [cityToId], references: [id])
  price         Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  reservedTrips ReservedTrip[]
}

model Bus {
  id        Int      @id @default(autoincrement())
  name      String
  trips     Trip[]
  seats     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TicketState {
  CREATED
  ONBOARDED
}

model ReservedTicket {
  id             Int              @id @default(autoincrement())
  name           String
  email          String
  citizenId      String
  state          ReservationState @default(CREATED)
  reservedTrip   ReservedTrip     @relation(fields: [reservedTripId], references: [id])
  reservedTripId Int
}

model ReservedTrip {
  id              Int              @id @default(autoincrement())
  trip            Trip             @relation(fields: [tripId], references: [id])
  tripId          Int
  reservation     Reservation      @relation(fields: [reservationId], references: [id])
  reservationId   Int
  reservedTickets ReservedTicket[]
}

enum ReservationState {
  CREATED
  PAID
  ONBOARDED
}

model Reservation {
  id            Int              @id @default(autoincrement())
  token         String           @unique
  reservedTrips ReservedTrip[]
  state         ReservationState @default(CREATED)
  expiresAt     DateTime
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}
